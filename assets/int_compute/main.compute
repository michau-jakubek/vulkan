#version 450
#extension GL_GOOGLE_include_directive : enable
#include "compute.shader"

/*
layout(push_constant) uniform PushConstant
{
	uint addressingMode;
	uint checkpointMax;
	uint controlIndex0;
	uint controlIndex1;
	uint controlIndex2;
	uint controlIndex3;
	uint controlIndex4;
};
layout(binding = 1) buffer InvocationsTinput { uint t[]; } inputT;
layout(binding = 2) buffer InvocationsIinput { uint i[]; } inputI;
layout(binding = 3) buffer InvocationsJinput { uint j[]; } inputJ;
layout(binding = 4) buffer InvocationsRoutput { uint r[]; } outputR;
*/

int readIntI(uint at) {
	int result = 0;
	if ((inputT.t[at] & 0xFFFF) == 2)
		result = int(uintBitsToFloat(inputI.i[at]));
	else result = int(inputI.i[at]);
	return result;
}
void write(uint x, uint at)
{
	if ((inputT.t[at] & 0xFFFF) == 2)
	{
		outputR.r[at] = floatBitsToUint(float(x));
	}
	else
	{
		outputR.r[at] = x;
	}
}
void main()
{
	outputR.r[gl_LocalInvocationIndex] = inputT.t[gl_LocalInvocationIndex] & 0xFFFF;
	write( inputT.t[gl_LocalInvocationIndex] & 0xFFFF, gl_LocalInvocationIndex );
}
