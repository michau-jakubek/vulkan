; SPIR-V
; Version: 1.3
; Generator: Khronos Glslang Reference Front End; 11
; Bound: 150
; Schema: 0
               OpCapability Shader
${Capabilities}
               OpCapability VulkanMemoryModel
               OpCapability CooperativeMatrixKHR
${Extensions}
               OpExtension "SPV_KHR_cooperative_matrix"
               OpExtension "SPV_KHR_vulkan_memory_model"
          %1 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical Vulkan
               OpEntryPoint GLCompute %main "main"
               OpExecutionMode %main LocalSize 1 1 1

               ; Annotations
               OpDecorate %M SpecId 1
               OpDecorate %K SpecId 2
               OpDecorate %N SpecId 3
               OpDecorate %PC Block
               OpMemberDecorate %PC 0 Offset 0
               OpMemberDecorate %PC 1 Offset 4
               OpMemberDecorate %PC 2 Offset 8
               OpMemberDecorate %PC 3 Offset 12
               OpMemberDecorate %PC 4 Offset 16
               OpDecorate %_runtimearr_adata ArrayStride ${AStride}
               OpDecorate %DataA Block
               OpMemberDecorate %DataA 0 Offset 0
               OpDecorate %__0 Binding 0
               OpDecorate %__0 DescriptorSet 0
               OpDecorate %_runtimearr_bdata ArrayStride ${BStride}
               OpDecorate %DataB Block
               OpMemberDecorate %DataB 0 Offset 0
               OpDecorate %__1 Binding 1
               OpDecorate %__1 DescriptorSet 0
               OpDecorate %_runtimearr_cdata ArrayStride ${CStride}
               OpDecorate %DataC Block
               OpMemberDecorate %DataC 0 Offset 0
               OpDecorate %__2 Binding 2
               OpDecorate %__2 DescriptorSet 0
               OpDecorate %_runtimearr_rdata ArrayStride ${RStride}
               OpDecorate %DataR Block
               OpMemberDecorate %DataR 0 Offset 0
               OpDecorate %__3 Binding 3
               OpDecorate %__3 DescriptorSet 0
               OpDecorate %147 SpecId 0
               OpDecorate %gl_WorkGroupSize BuiltIn WorkgroupSize

               ; Types, variables and constants
       %void = OpTypeVoid
          %3 = OpTypeFunction %void
       %bool = OpTypeBool
       %uint = OpTypeInt 32 0
        %int = OpTypeInt 32 1
${TypeList}
     %uint_0 = OpConstant %uint 0
     %uint_1 = OpConstant %uint 1
     %uint_2 = OpConstant %uint 2
     %uint_3 = OpConstant %uint 3
     %uint_5 = OpConstant %uint 5
      %int_0 = OpConstant %int 0
      %int_1 = OpConstant %int 1
      %int_2 = OpConstant %int 2
      %int_3 = OpConstant %int 3
      %int_4 = OpConstant %int 4
          %M = OpSpecConstant %int 1                ; SpecId 1
          %K = OpSpecConstant %int 1                ; SpecId 2
          %N = OpSpecConstant %int 1                ; SpecId 3

  %matA_type = OpTypeCooperativeMatrixKHR ${AType} %uint_3 %M %K %uint_0
  %matA_null = OpConstantNull %matA_type
%_ptr_Function_13 = OpTypePointer Function %matA_type
         %15 = OpTypeFunction %void %_ptr_Function_13

  %matB_type = OpTypeCooperativeMatrixKHR ${BType} %uint_3 %K %N %uint_1
  %matB_null = OpConstantNull %matB_type
%_ptr_Function_21 = OpTypePointer Function %matB_type
         %23 = OpTypeFunction %void %_ptr_Function_21

 %matCR_type = OpTypeCooperativeMatrixKHR ${CRType} %uint_3 %M %N %uint_2
 %matCR_null = OpConstantNull %matCR_type
%_ptr_Function_28 = OpTypePointer Function %matCR_type
         %30 = OpTypeFunction %void %_ptr_Function_28
         %34 = OpTypeFunction %matCR_type

         %PC = OpTypeStruct %uint %uint %uint %uint %uint   ; Block
%_ptr_PushConstant_PC = OpTypePointer PushConstant %PC
          %_ = OpVariable %_ptr_PushConstant_PC PushConstant
%_ptr_PushConstant_uint = OpTypePointer PushConstant %uint

%_runtimearr_adata = OpTypeRuntimeArray ${AType}     ; ArrayStride ${AStride}
      %DataA = OpTypeStruct %_runtimearr_adata       ; Block
%_ptr_StorageBuffer_DataA = OpTypePointer StorageBuffer %DataA
        %__0 = OpVariable %_ptr_StorageBuffer_DataA StorageBuffer   ; Binding 0, DescriptorSet 0
         %58 = OpSpecConstantOp %uint IAdd %K %uint_0
         %62 = OpSpecConstantOp %uint IAdd %K %uint_0

%_runtimearr_bdata = OpTypeRuntimeArray ${BType}   ; ArrayStride ${BStride}
      %DataB = OpTypeStruct %_runtimearr_bdata     ; Block
%_ptr_StorageBuffer_DataB = OpTypePointer StorageBuffer %DataB
        %__1 = OpVariable %_ptr_StorageBuffer_DataB StorageBuffer   ; Binding 1, DescriptorSet 0
         %77 = OpSpecConstantOp %uint IAdd %N %uint_0
         %81 = OpSpecConstantOp %uint IAdd %N %uint_0

%_runtimearr_cdata = OpTypeRuntimeArray ${CRType}  ; ArrayStride ${CStride}
      %DataC = OpTypeStruct %_runtimearr_cdata     ; Block
%_ptr_StorageBuffer_DataC = OpTypePointer StorageBuffer %DataC
        %__2 = OpVariable %_ptr_StorageBuffer_DataC StorageBuffer   ; Binding 2, DescriptorSet 0
         %96 = OpSpecConstantOp %uint IAdd %N %uint_0
        %100 = OpSpecConstantOp %uint IAdd %N %uint_0

%_ptr_StorageBuffer_AType = OpTypePointer StorageBuffer ${AType}
%_ptr_StorageBuffer_BType = OpTypePointer StorageBuffer ${BType}
%_ptr_StorageBuffer_CRType = OpTypePointer StorageBuffer ${CRType}

%_ptr_Private_13 = OpTypePointer Private %matA_type
          %A = OpVariable %_ptr_Private_13 Private
%_ptr_Private_21 = OpTypePointer Private %matB_type
          %B = OpVariable %_ptr_Private_21 Private
%_ptr_Private_28 = OpTypePointer Private %matCR_type
          %C = OpVariable %_ptr_Private_28 Private
          %R = OpVariable %_ptr_Private_28 Private

%_runtimearr_rdata = OpTypeRuntimeArray ${CRType}  ; ArrayStride ${RStride}
      %DataR = OpTypeStruct %_runtimearr_rdata     ; Block
%_ptr_StorageBuffer_DataR = OpTypePointer StorageBuffer %DataR
        %__3 = OpVariable %_ptr_StorageBuffer_DataR StorageBuffer   ; Binding 3, DescriptorSet 0
        %146 = OpSpecConstantOp %uint IAdd %N %uint_0
        %147 = OpSpecConstant %uint 1               ; SpecId 0
     %v3uint = OpTypeVector %uint 3
%gl_WorkGroupSize = OpSpecConstantComposite %v3uint %147 %uint_1 %uint_1    ; BuiltIn WorkgroupSize

               ; Function main
       %main = OpFunction %void None %3
          %5 = OpLabel
      %param = OpVariable %_ptr_Function_13 Function
    %param_0 = OpVariable %_ptr_Function_21 Function
    %param_1 = OpVariable %_ptr_Function_28 Function
        %130 = OpFunctionCall %void %loadMatrix_A %param
        %131 = OpLoad %matA_type %param
               OpStore %A %131
        %133 = OpFunctionCall %void %loadMatrix_B %param_0
        %134 = OpLoad %matB_type %param_0
               OpStore %B %134
        %136 = OpFunctionCall %void %loadMatrix_C %param_1
        %137 = OpLoad %matCR_type %param_1
               OpStore %C %137
        %139 = OpFunctionCall %matCR_type %genOutputMatrix_
               OpStore %R %139

        %140 = OpLoad %matCR_type %R
        %145 = OpAccessChain %_ptr_StorageBuffer_CRType %__3 %int_0 %uint_0
               OpCooperativeMatrixStoreKHR %145 %140 %int_0 %146 MakePointerAvailable|NonPrivatePointer %uint_5

       %matC = OpLoad %matCR_type %C
     %p_sb_C = OpAccessChain %_ptr_StorageBuffer_CRType %__2 %int_0 %uint_0
               OpCooperativeMatrixStoreKHR %p_sb_C %matC %int_0 %100 MakePointerAvailable|NonPrivatePointer %uint_5

       %matB = OpLoad %matB_type %B
     %p_sb_B = OpAccessChain %_ptr_StorageBuffer_BType %__1 %int_0 %uint_0
               OpCooperativeMatrixStoreKHR %p_sb_B %matB %int_0 %81 MakePointerAvailable|NonPrivatePointer %uint_5

       %matA = OpLoad %matA_type %A
     %p_sb_A = OpAccessChain %_ptr_StorageBuffer_AType %__0 %int_0 %uint_0
               OpCooperativeMatrixStoreKHR %p_sb_A %matA %int_0 %62 MakePointerAvailable|NonPrivatePointer %uint_5

               OpReturn
               OpFunctionEnd

               ; Function loadMatrix_A
%loadMatrix_A = OpFunction %void None %15
        %mtx = OpFunctionParameter %_ptr_Function_13
         %18 = OpLabel
         %42 = OpAccessChain %_ptr_PushConstant_uint %_ %int_0
         %43 = OpLoad %uint %42
         %45 = OpAccessChain %_ptr_PushConstant_uint %_ %int_1
         %46 = OpLoad %uint %45
         %48 = OpIEqual %bool %43 %46
               OpSelectionMerge %50 None
               OpBranchConditional %48 %49 %60
         %49 = OpLabel
               OpStore %mtx %matA_null ; %59
               OpBranch %50
         %60 = OpLabel
         %61 = OpAccessChain %_ptr_StorageBuffer_AType %__0 %int_0 %uint_0
         %63 = OpCooperativeMatrixLoadKHR %matA_type %61 %int_0 %62 MakePointerVisible|NonPrivatePointer %uint_5
               OpStore %mtx %63
               OpBranch %50
         %50 = OpLabel
               OpReturn
               OpFunctionEnd

               ; Function loadMatrix_B
%loadMatrix_B = OpFunction %void None %23
      %mtx_0 = OpFunctionParameter %_ptr_Function_21
         %26 = OpLabel
         %64 = OpAccessChain %_ptr_PushConstant_uint %_ %int_0
         %65 = OpLoad %uint %64
         %67 = OpAccessChain %_ptr_PushConstant_uint %_ %int_2
         %68 = OpLoad %uint %67
         %69 = OpIEqual %bool %65 %68
               OpSelectionMerge %71 None
               OpBranchConditional %69 %70 %79
         %70 = OpLabel
               OpStore %mtx_0 %matB_null ; %78
               OpBranch %71
         %79 = OpLabel
         %80 = OpAccessChain %_ptr_StorageBuffer_BType %__1 %int_0 %uint_0
         %82 = OpCooperativeMatrixLoadKHR %matB_type %80 %int_0 %81 MakePointerVisible|NonPrivatePointer %uint_5
               OpStore %mtx_0 %82
               OpBranch %71
         %71 = OpLabel
               OpReturn
               OpFunctionEnd

               ; Function loadMatrix_C
%loadMatrix_C = OpFunction %void None %30
      %mtx_1 = OpFunctionParameter %_ptr_Function_28
         %33 = OpLabel
         %83 = OpAccessChain %_ptr_PushConstant_uint %_ %int_0
         %84 = OpLoad %uint %83
         %86 = OpAccessChain %_ptr_PushConstant_uint %_ %int_3
         %87 = OpLoad %uint %86
         %88 = OpIEqual %bool %84 %87
               OpSelectionMerge %90 None
               OpBranchConditional %88 %89 %98
         %89 = OpLabel
               OpStore %mtx_1 %matCR_null ; %97
               OpBranch %90
         %98 = OpLabel
         %99 = OpAccessChain %_ptr_StorageBuffer_CRType %__2 %int_0 %uint_0
        %101 = OpCooperativeMatrixLoadKHR %matCR_type %99 %int_0 %100 MakePointerVisible|NonPrivatePointer %uint_5
               OpStore %mtx_1 %101
               OpBranch %90
         %90 = OpLabel
               OpReturn
               OpFunctionEnd

               ; Function genOutputMatrix_
%genOutputMatrix_ = OpFunction %matCR_type None %34
         %36 = OpLabel
        %res = OpVariable %_ptr_Function_28 Function
        %102 = OpAccessChain %_ptr_PushConstant_uint %_ %int_0
        %103 = OpLoad %uint %102
        %105 = OpAccessChain %_ptr_PushConstant_uint %_ %int_4
        %106 = OpLoad %uint %105
        %107 = OpIEqual %bool %103 %106
               OpSelectionMerge %109 None
               OpBranchConditional %107 %108 %121
        %108 = OpLabel
               OpStore %res %matCR_null ; %120
               OpBranch %109
        %121 = OpLabel
        %122 = OpLoad %matA_type %A
        %123 = OpLoad %matB_type %B
        %124 = OpLoad %matCR_type %C
        %125 = OpCooperativeMatrixMulAddKHR %matCR_type %122 %123 %124 ${Operands}
               OpStore %res %125
               OpBranch %109
        %109 = OpLabel
        %126 = OpLoad %matCR_type %res
               OpReturnValue %126
               OpFunctionEnd
